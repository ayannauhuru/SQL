-- For this project, I downloaded Spotify data from Kaggle.
-- Then I created a table to insert the Spotify data into.
-- And performed analytics on the data using SQL.

-- Creating the table.

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

-- Then I inserted the Spotify data into the table from a csv file.
-- Next, I analyzed the data using the following SQL.

-- What is the average danceability and duration by artist and track?

SELECT artist_name
, track_name
, AVG(danceability)
, AVG(duration_ms)
FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name;

-- Who are the top 10 artists based on popularity?

SELECT artist_name AS artist
, popularity FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10;

-- What artist released the longest song?

SELECT artist_name
, track_name
, MAX(duration_ms)
FROM BIT_DB.Spotifydata;

-- Which artists have more than 1 song in the data set and how many do they have?

SELECT artist_name
, COUNT(track_name) AS track_count
FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING track_count > 1
ORDER BY track_count desc;

-- List all tracks starting with letters from the first half of the alphabet.

SELECT track_name
FROM BIT_DB.Spotifydata
WHERE track_name >= 'A' and track_name < 'N'
ORDER BY track_name asc;

-- How many songs have a instrumentalness of 0 and are more than 200,000 miliseconds?

SELECT COUNT(track_name)
FROM BIT_DB.Spotifydata
WHERE instrumentalness = 0
AND duration_ms > 200000;

-- What is the average tempo of songs with a popularity below 80?

SELECT AVG(tempo)
FROM BIT_DB.Spotifydata
WHERE popularity < 80;

-- Which 2 of Olivia Rodrigo's songs have the lowest energy and popularity?

SELECT DISTINCT artist_name, track_name, energy, popularity
FROM BIT_DB.Spotifydata
WHERE artist_name = 'Olivia Rodrigo'
ORDER BY energy asc, popularity asc
LIMIT 2;

